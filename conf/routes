


GET      /td                                    controllers.MainPage.tdGet
POST     /td                                    controllers.MainPage.tdPost
PUT      /td                                    controllers.MainPage.tdPut
DELETE   /td                                    controllers.MainPage.tdDelete

GET      /dec/:id                               controllers.JSonRestApi.getDecision(id: Long)

GET      /dec/alternatives/:did                  controllers.JSonRestApi.getAlternatives(did: Long)
POST     /dec/alternatives/:did                  controllers.JSonRestApi.createAlternative(did: Long)
PUT      /dec/alternatives/:did/:altId           controllers.JSonRestApi.updateAlternative(did: Long, altId: Long)
DELETE   /dec/alternatives/:did/:altId           controllers.JSonRestApi.deleteAlternative(did: Long, altId: Long)

GET      /ballot/:did                           controllers.JSonRestApi.getBallot(did: Long)
GET      /vote/:did/:altId/:score               controllers.JSonRestApi.vote(did: Long, altId: Long, score: Int)


GET   /vdv                                    controllers.MainPage.vdv

GET     /sp                                    controllers.MainPage.sp

GET     /fbauth                                controllers.MainPage.fbauth
GET     /logout                                controllers.MainPage.logout

GET     /backb/:decisionId                             controllers.MainPage.backb(decisionId: Long)
GET     /backb2                                controllers.MainPage.backb2

GET     /                                      controllers.MainPage.index
POST    /facebookCanvasUrl/                    controllers.MainPage.facebookCanvasUrl
POST    /loginWithFacebookToken                controllers.MainPage.loginWithFacebookToken
GET     /channel                               controllers.MainPage.facebookChannelFile
GET     /externalLogin/:provider/*path         controllers.MainPage.externalLogin(provider: String, path: String)


GET     /mainScreen                            controllers.Screens.mainScreen
GET     /participants/:decisionId/:page/:size  controllers.Screens.participants(decisionId: Long, page: Int, size: Int)
GET     /p/:decisionId                         controllers.Screens.decisionDetails(decisionId: Long)
GET     /decision/create                       controllers.Screens.create
POST    /decision/create                       controllers.Screens.submitNewDecision
GET     /decision/edit/:decisionId             controllers.Screens.edit(decisionId: Long)
POST    /decision/edit                         controllers.Screens.submitDecisionEdit

GET     /login                                 controllers.Dialogs.login
GET     /vote/:decisionId                      controllers.Dialogs.voteScreen(decisionId: Long)
POST    /vote/:decisionId                      controllers.Dialogs.submitVote(decisionId: Long)
GET     /authorizeApp/:fbAppReqId              controllers.Dialogs.authorizeApp(fbAppReqId: Long)
POST    /acceptOrDeclineInvitations            controllers.Dialogs.acceptOrDeclineInvitations
POST    /recordInvitationList                  controllers.Dialogs.recordInvitationList


GET     /test                                  controllers.Test.test
GET     /emptyPage                             controllers.Test.emptyPage
GET     /compareVotingMethods                  controllers.Test.compareVotingMethods


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                          controllers.Assets.at(path="/public", file)

#GET     /ltd/*file                          controllers.Assets.at(path="/public/ltd", file)



# >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>><<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<

# GET     /assets/stylesheets/*file              controllers.Assets.at(path="/target/resource_managed/main/public/stylesheets/", file)

#Decisions NG

#GET /:year/:month  controllers.Decisions
#GET /:year/:month  controllers.Decisions

#GET /global      controllers.continentIndex("global")
#GET /americas    controllers.continentIndex("americas")
#GET /europe
#GET /asia
#GET /africa
#GET /oceania

# mind source ? 

#GET     /decision/:id                          controllers.Decisions.show(id: Long)
#GET     /myDecisions/:ownerId                  controllers.Decisions.myDecisions(ownerId: Long)
#GET     /myDecisions/                          controllers.Decisions.myDecisionz
#POST    /myDecisions/                          controllers.Decisions.myDecisionz
#POST    /decisionSubmit                        controllers.Decisions.submit
#GET     /decision/invite/:decisionId           controllers.Decisions.invite(decisionId: Long)


# accountName is a userName, countryCode or organasationName
# Country codes or continent names cannot be granted for accounts, but a decision can be indexed in it,
# i.e. anyone can create a decision and publish it under a country or continent 

#GET /:accountName                             controllers.account(accountName: String)
#GET /:accountName/:decisionName               controllers.decision(accountName: String, decisionName: String)
#GET /:accountName/:decisionName/:alternative  controllers.alternative(accountName: String, decisionName: String, alternative: String)

#GET /ca/:decisionName/:alternative 

