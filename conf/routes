
GET      /equivote/:l                           controllers.MainPage.equivote(l: String)
GET      /cssExp                                controllers.MainPage.cssExp

GET      /                                      controllers.MainPage.home
#GET     /newDecision                           controllers.MainPage.newDecision
#GET     /decisionAdmin/:id                     controllers.MainPage.decisionAdmin(id: String)
POST     /facebookCanvasUrl/                    controllers.MainPage.facebookCanvasUrl
GET      /logout                                controllers.MainPage.logout

# Public View :
GET  /d/:guid                                    controllers.MainPage.app(guid: String) 

# Admin Link :
GET  /admin/:guid                                controllers.MainPage.app(guid: String)

# Voter Link :
GET  /vote/:guid                                controllers.MainPage.appVoter(guid: String)

GET      /guid                                  controllers.JSonRestApi.newSignedGuidJson

GET      /dec/:id                               controllers.JSonRestApi.getDecision(id: String)
GET      /decision/:id                          controllers.JSonRestApi.getDecisionPublicView(id: String)
PUT      /dec/:id                               controllers.JSonRestApi.saveDecision(id: String)
POST     /dec                                   controllers.JSonRestApi.createDecision()
GET      /dec/alternatives/:did                 controllers.JSonRestApi.getAlternatives(did: String)
POST     /dec/alternatives/:did                 controllers.JSonRestApi.createAlternative(did: String)
PUT      /dec/alternatives/:did/:altId          controllers.JSonRestApi.updateAlternative(did: String, altId: Long)
DELETE   /dec/alternatives/:did/:altId          controllers.JSonRestApi.deleteAlternative(did: String, altId: Long)
POST     /loginWithFacebookToken                controllers.JSonRestApi.loginWithFacebookToken
GET      /logoutRest                            controllers.JSonRestApi.logoutRest 

POST     /dec/recordInvitationList/:accessGuid  controllers.JSonRestApi.recordInvitationList(accessGuid: String)
GET      /dec/participants/:decisionId          controllers.JSonRestApi.getParticipants(decisionId: String)

GET      /ballot/:did                           controllers.JSonRestApi.getBallot(did: String)
GET      /vote/:did/:altId/:score               controllers.JSonRestApi.vote(did: String, altId: Long, score: Int)
GET      /submitVote/:did                       controllers.JSonRestApi.submitVote(did: String)

GET      /myDecisionIds                         controllers.JSonRestApi.myDecisionIds
GET      /setDecisionPhase/:did/:phase          controllers.JSonRestApi.setDecisionPhase(did: String, phase: String)

POST     /requestEnableEmailInvites/:did        controllers.JSonRestApi.requestEnableEmailInvites(did: String)

POST     /inviteByEmail/:did                    controllers.JSonRestApi.inviteByEmail(did: String)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                          controllers.Assets.at(path="/public", file)
